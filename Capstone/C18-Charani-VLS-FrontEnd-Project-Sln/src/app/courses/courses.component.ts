import { Component, OnInit } from '@angular/core';
import { CourseService } from '../service/course.service';
import { Course } from '../model/data.model';
import { Router } from '@angular/router';

@Component({
  selector: 'app-courses',
  templateUrl: './courses.component.html',
  styleUrls: ['./courses.component.css']
})
export class CoursesComponent implements OnInit {
  courses: Course[] = [];
  displayedCourses: Course[] = [];
  searchTerm: string = '';
  newCourse: Partial<Course> = { name: '', description: '', trainer: '', price: 0};

  constructor(private courseService: CourseService, private router: Router) { }

  ngOnInit() {
    this.loadCourses();
  }

  // loadCourses() {
  //   this.courseService.getCourses().subscribe({
  //     next: (data) => {
  //       this.courses = data;
  //       this.displayedCourses = data;
  //     },
  //     error: (err) => {
  //       console.error('Error fetching courses:', err);
  //     }
  //   });
  // }

  loadCourses() {
    this.courseService.getCourses().subscribe({
      next: (data) => {
        this.courses = data;
        this.displayedCourses = data;
      },
      error: (err) => {
        console.error('Error fetching courses:', err);
      }
    });
  }

  FilteredCourses() {
    if (!this.searchTerm.trim()) {
      this.displayedCourses = [...this.courses];
    } else {
      this.displayedCourses = this.courses.filter(course =>
        course.id?.toLowerCase().includes(this.searchTerm.toLowerCase()) ||
        course.name.toLowerCase().includes(this.searchTerm.toLowerCase())
      );
    }
  }

  addCourse(): void {
    this.router.navigate(["/addcourse"]);
    if (this.newCourse.name?.trim() && this.newCourse.description?.trim() && this.newCourse.trainer?.trim() && this.newCourse.price != null) {
      const course: Course = {
        id: '', // ID will be handled by the backend or autogenerated
        name: this.newCourse.name.trim(),
        description: this.newCourse.description.trim(),
        trainer: this.newCourse.trainer.trim(),
        price: this.newCourse.price
      };

      this.courseService.createCourse(course).subscribe({
        next: (createdCourse) => {
          console.log('Course created:', createdCourse);
          this.courses.push(createdCourse); // Add to the local course array
          this.FilteredCourses(); // Refresh the displayed courses
          this.newCourse = { name: '', description: '', trainer: '' }; // Reset the form
        },
        error: (err) => {
          console.error('Error creating course:', err);
        }
      });
    } else {
      console.error('Invalid course details');
    }
  }

  editCourse(course: Course) {
    console.log('Editing course:', course);
    this.router.navigate(['/updatecourse', course.id]);

    // this.router.navigate(['/updatecourse/:id']);
    // Implement edit logic
  }



  deleteCourse(id: string | undefined) {
    if (id) {  // Ensure that the ID is not undefined or null
      this.courseService.deleteCourse(id).subscribe({
        next: () => {
          this.courses = this.courses.filter(course => course.id !== id);
          this.FilteredCourses();
        },
        error: (err) => {
          console.error('Error deleting course:', err);
        }
      });
    } else {
      console.error('Invalid course ID');
    }
  }
  
}

//   deleteCourse(id: string) {
//     this.courseService.deleteCourse(id).subscribe({
//       next: () => {
//         this.courses = this.courses.filter(course => course.id !== id);
//         this.FilteredCourses();
//       },
//       error: (err) => {
//         console.error('Error deleting course:', err);
//       }
//     });
//   }
// }


// import { Component, OnInit } from '@angular/core';
// import { CourseService } from '../service/course.service';
// import { Course } from '../model/data.model';
// import { Router } from '@angular/router';

// @Component({
//   selector: 'app-courses',
//   templateUrl: './courses.component.html',
//   styleUrls: ['./courses.component.css']
// })
// export class CoursesComponent implements OnInit {
//   courses: Course[] = [];   // All courses fetched from the backend
//   displayedCourses: Course[] = [];  // Filtered courses displayed to the user
//   searchTerm: string = '';  // Used to filter courses based on search input
//   newCourse: Partial<Course> = { name: '', description: '' };  // Model for adding a new course

//   constructor(private courseService: CourseService, private router: Router) { }

//   ngOnInit() {
//     this.loadCourses();  // Load courses when the component initializes
//   }

//   loadCourses() {
//     this.courseService.getCourses().subscribe({
//       next: (data) => {
//         this.courses = data;
//         this.displayedCourses = data;  // Set displayed courses to all courses initially
//       },
//       error: (err) => {
//         console.error('Error fetching courses:', err);
//       }
//     });
//   }

//   FilteredCourses() {
//     if (!this.searchTerm.trim()) {
//       this.displayedCourses = [...this.courses];  // Show all courses if no search term is provided
//     } else {
//       this.displayedCourses = this.courses.filter(course =>
//         course.id?.toLowerCase().includes(this.searchTerm.toLowerCase()) ||  // Search by ID or Name
//         course.name.toLowerCase().includes(this.searchTerm.toLowerCase())
//       );
//     }
//   }

//   generateCourseId(): string {
//     const existingCourseCount = this.courses.length;
//     const newId = `C${(existingCourseCount + 1).toString().padStart(4, '0')}`;  // Generate ID like C0001, C0002, etc.
//     return newId;
//   }

//   addCourse(): void {
//     if (this.newCourse.name?.trim() && this.newCourse.description?.trim()) {
//       const course: Course = {
//         id: this.generateCourseId(),  // Auto-generate ID before sending to the backend
//         name: this.newCourse.name.trim(),
//         description: this.newCourse.description.trim(),
//       };

//       this.courseService.createCourse(course).subscribe({
//         next: (createdCourse) => {
//           console.log('Course created:', createdCourse);
//           this.courses.push(createdCourse);  // Add newly created course to the list
//           this.FilteredCourses();  // Refresh displayed courses
//           this.newCourse = { name: '', description: '' };  // Reset form fields after successful creation
//         },
//         error: (err) => {
//           console.error('Error creating course:', err);
//         }
//       });
//     } else {
//       console.log('Invalid course details');
//     }
//   }

//   deleteCourse(id: string) {
//     if (id) {
//       this.courseService.deleteCourse(id).subscribe({
//         next: () => {
//           this.courses = this.courses.filter(course => course.id !== id);  // Remove course from local list
//           this.FilteredCourses();  // Refresh displayed courses
//         },
//         error: (err) => {
//           console.error('Error deleting course:', err);
//         }
//       });
//     } else {
//       console.log('Invalid course ID');
//     }
//   }
// }